{
  "hash": "cc2ace8e1bab956802aa6da5f54b40fa",
  "result": {
    "markdown": "---\ntitle: \"Matching and Subclassification\"\n---\n\n\n# Assignment  \n\n*  You are running an online store and one year ago, you introduced a plus membership to bind customers to your store and increase revenue. The plus memberships comes at a small cost for the customers, which is why not all of the customers subscribed. Now you want to examine whether binding customers by this membership program in fact increases your sales with subscribed customers. But of course, there are potentially confounding variables such as age, sex or pre_avg_purch (previous average purchases).\n\n### Load the data. Then: \n\n## Check the relationships between the variables and draw a DAG as you understand the relations.\n\n*  C -> card\n*  A -> age\n*  S -> sex\n*  PAP -> Pre Average Purchase (pre_abg_purch)\n*  AP -> Average Purchase (avg_purch)\n\n\n::: {.cell hash='07_matching_cache/html/unnamed-chunk-1_44f91221e2ea3fa095836a42b07ecc13'}\n\n```{.r .cell-code}\nlibrary(dagitty)\nlibrary(ggdag)\nlibrary(ggplot2)\nlibrary(MatchIt)\nlibrary(tidyverse)\n# Load the dataset\nmembership_data <- readRDS(\"D:/GitHub/cdsba-pamoviedo/Causal_Data_Science_Data/membership.rds\")\n\n# Define DAG\ndag_model <- 'dag {\nbb=\"0,0,1,1\"\nAP [avgpur,pos=\"0.9,0.6\"]\nPAP [preavgpur,pos=\"0.6,0.4\"]\nC [card,pos=\"0.9,0.4\"]\nA [pos=\"0.7,0.6\"]\nS [pos=\"0.7,0.2\"]\n\nC-> AP\nPAP -> C\nA-> C\nS-> C\nA-> PAP\nS -> PAP\n\n}\n'\n# draw DAG\nggdag(dag_model) +\n  theme_dag()+\n  geom_dag_point(color = \"pink\") +\n  geom_dag_text(color = \"blue\") +\n  geom_dag_edges(edge_color = \"red\")\n```\n\n::: {.cell-output-display}\n![](07_matching_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n\n## Compute a naive estimate of the average treatment effect.\n\n::: {.cell hash='07_matching_cache/html/unnamed-chunk-2_9700fc2c64b47aab2eda68c72e4a27a6'}\n\n```{.r .cell-code}\nlm_model <- lm(avg_purch ~  card, data = membership_data)\nsummary(lm_model)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> \n#> Call:\n#> lm(formula = avg_purch ~ card, data = membership_data)\n#> \n#> Residuals:\n#>      Min       1Q   Median       3Q      Max \n#> -101.515  -20.684   -0.199   20.424  120.166 \n#> \n#> Coefficients:\n#>             Estimate Std. Error t value Pr(>|t|)    \n#> (Intercept)  65.9397     0.3965  166.29   <2e-16 ***\n#> card         25.2195     0.6095   41.38   <2e-16 ***\n#> ---\n#> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#> \n#> Residual standard error: 30.11 on 9998 degrees of freedom\n#> Multiple R-squared:  0.1462,\tAdjusted R-squared:  0.1461 \n#> F-statistic:  1712 on 1 and 9998 DF,  p-value: < 2.2e-16\n```\n:::\n\n```{.r .cell-code}\ncoefficients <- coef(lm_model)\nprint(coefficients)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> (Intercept)        card \n#>    65.93965    25.21950\n```\n:::\n:::\n\n\n\n## Use the following matching methods to obtain more precise estimates:\n\n1.  (Coarsened) Exact Matching.  \n\n::: {.cell hash='07_matching_cache/html/unnamed-chunk-3_20b5f9a290878303e8dd0853392d88f4'}\n\n```{.r .cell-code}\n#CEM\ncem <- matchit(card ~ avg_purch + age + pre_avg_purch + sex,\n               data = membership_data, \n               method = 'cem', \n               estimand = 'ATE')\ndf_cem <- match.data(cem)\nmodel_cem<- lm(avg_purch ~ card, data = df_cem, weights = weights)\nsummary (model_cem)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> \n#> Call:\n#> lm(formula = avg_purch ~ card, data = df_cem, weights = weights)\n#> \n#> Weighted Residuals:\n#>      Min       1Q   Median       3Q      Max \n#> -162.422  -19.058    0.153   18.795  147.646 \n#> \n#> Coefficients:\n#>             Estimate Std. Error t value Pr(>|t|)    \n#> (Intercept)  75.9624     0.4051 187.526   <2e-16 ***\n#> card          0.9485     0.6212   1.527    0.127    \n#> ---\n#> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#> \n#> Residual standard error: 28.34 on 8515 degrees of freedom\n#> Multiple R-squared:  0.0002737,\tAdjusted R-squared:  0.0001563 \n#> F-statistic: 2.332 on 1 and 8515 DF,  p-value: 0.1268\n```\n:::\n:::\n\n\n2.  Nearest-Neighbor Matching. \n\n\n::: {.cell hash='07_matching_cache/html/unnamed-chunk-4_ee775ddcbc0f54a5b54a0e03cf608c07'}\n\n```{.r .cell-code}\n#Nearest Neighbor\nnn <- matchit(card ~ avg_purch + pre_avg_purch + sex + age,\n              data = membership_data,\n              method = \"nearest\", # changed\n              distance = \"mahalanobis\", # changed\n              replace = T)\ndf_nn <- match.data(nn)\nnn_model <- lm(avg_purch ~ card, data = df_nn, weights = weights)\nsummary(nn_model)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> \n#> Call:\n#> lm(formula = avg_purch ~ card, data = df_nn, weights = weights)\n#> \n#> Weighted Residuals:\n#>      Min       1Q   Median       3Q      Max \n#> -101.515  -22.370   -3.279   16.475  178.481 \n#> \n#> Coefficients:\n#>             Estimate Std. Error t value Pr(>|t|)    \n#> (Intercept)  90.2268     0.6438 140.155   <2e-16 ***\n#> card          0.9324     0.7939   1.174     0.24    \n#> ---\n#> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#> \n#> Residual standard error: 30.22 on 6434 degrees of freedom\n#> Multiple R-squared:  0.0002143,\tAdjusted R-squared:  5.895e-05 \n#> F-statistic: 1.379 on 1 and 6434 DF,  p-value: 0.2403\n```\n:::\n:::\n\n\n3.  Inverse Probability Weighting.\n\n::: {.cell hash='07_matching_cache/html/unnamed-chunk-5_821b9f0e260b3f392b819d4cc4eb7896'}\n\n```{.r .cell-code}\n# Inverse Probability Weighting\nmodel_prop <- glm(card ~ avg_purch + sex + age + pre_avg_purch,\n                  data=membership_data,\n                  family = binomial(link=\"logit\"))\ndf_aug <- membership_data %>% mutate(propensity = predict(model_prop, type = \"response\"))\n\n#Extend data by IPW scores:\ndf_ipw <- df_aug %>% mutate(\n  ipw = (card/propensity) + ((1-card) / (1-propensity)))\n\n#Estimation\nmodel_ipw <- lm(avg_purch ~ card,\n                data = df_ipw, \n                weights = ipw)\nsummary(model_ipw)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> \n#> Call:\n#> lm(formula = avg_purch ~ card, data = df_ipw, weights = ipw)\n#> \n#> Weighted Residuals:\n#>     Min      1Q  Median      3Q     Max \n#> -525.64  -28.55   -0.11   30.04  441.02 \n#> \n#> Coefficients:\n#>             Estimate Std. Error t value Pr(>|t|)    \n#> (Intercept)  76.5744     0.4664 164.189   <2e-16 ***\n#> card         -0.6361     0.6577  -0.967    0.333    \n#> ---\n#> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#> \n#> Residual standard error: 46.6 on 9998 degrees of freedom\n#> Multiple R-squared:  9.356e-05,\tAdjusted R-squared:  -6.45e-06 \n#> F-statistic: 0.9355 on 1 and 9998 DF,  p-value: 0.3335\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}